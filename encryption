import java.security.Security;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
 
public class Des3 {
    
    //the alg I use is DESede
    private static final String Algorithm = "DESede"; 
    
    
    public static byte[] encryptMode(byte[] keybyte, byte[] src) {
        try {
            // gengerate the key
            SecretKey key = new SecretKeySpec(keybyte, Algorithm);
            // encryption
            Cipher encryption = Cipher.getInstance(Algorithm);
            encryption.init(Cipher.ENCRYPT_MODE, key);
             return encryption.doFinal(src);
        } catch (java.lang.Exception e3) {
            e3.printStackTrace();
        }
        return null;
      
    }
 
 
    public static byte[] decryptMode(byte[] keybyte, byte[] src) {
        try {
            // gengerate the key
            SecretKey key = new SecretKeySpec(keybyte, Algorithm);
            // encryption
            Cipher encryption = Cipher.getInstance(Algorithm);
            encryption.init(Cipher.DECRYPT_MODE, key);
            return encryption.doFinal(src);
        } catch (java.lang.Exception e3) {
            e3.printStackTrace();
        }
        return null;
    }
 
    // Change to
    public static String byte2hex(byte[] b) {
        String hs = "";
        String stmp = "";
        for (int n = 0; n < b.length; n++) {
            stmp = (java.lang.Integer.toHexString(b[n] & 0XFF));
            if (stmp.length() == 1) {
                hs = hs + "0" + stmp;
            } else {
                hs = hs + stmp;
            }
            if (n < b.length - 1) {
                hs = hs + ":";
            }
        }
        return hs.toUpperCase();
    }
 
    public static void main(String[] args) {
 
        final byte[] keyBytes = {0x13, 0x24, 0x35, 0x46, (byte) 0x57, 0x10, 0x20, 0x30, 0x40, 0x25, 0x79, 0x51, (byte) 0xCB, (byte) 0xDD, 0x55, 0x66, 0x77, 0x29, 0x74, (byte) 0x98, 0x39, 0x47, 0x36, (byte) 0xE2 }; // 24字节的密钥
 
        String szSrc = "AWS188";
        System.out.println("加密前的字符串:" + szSrc);
 
        byte[] encoded = encryptMode(keyBytes, szSrc.getBytes());
        System.out.println("加密后的字符串:" + new String(encoded));
 
        byte[] srcBytes = decryptMode(keyBytes, encoded);
        System.out.println("解密后的字符串:" + (new String(srcBytes)));
    }
}
